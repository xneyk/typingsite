---
import Layout from '../layouts/Layout.astro';
import '../styles/global.css';
---
<Layout title='TypingSite:)'>
	<div id="game-zone" class="game-zone">
		<p id="timer">:D</p>
		<div id="words"></div>
		<input id="input" type="text" autofocus>
	</div>
</Layout>
<style>
	.game-zone {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-self: center;
		width: 70%;
	}

	#words {
		display: flex;
		flex-wrap: wrap;
	}
	
	.correct {
		color: var(--font-correct);
	}

	#timer {
		margin: 10px;
		font-size: 24px;
		font-weight: bold;
		color: var(--font-unwritten);
	}
	
</style>
<script>
	import { words } from "../../public/data/words";
	const $game_zone: HTMLElement | null = document.getElementById("game-zone");
	const $timer: HTMLElement | null = document.getElementById("timer");
	const $words: HTMLElement | null = document.getElementById("words");
	const $input: HTMLElement | null = document.getElementById("input");
	
	function startTimer() {
		let time: number = 30;
		$timer && ($timer.textContent = time.toString());
	
		const Countdown = setInterval(() => {
			// $timer!.innerText = initialTime.toString(); <-- Compact syntax.
			--time;
			$timer && ($timer.textContent = time.toString()); // $timer can be null so we need to protect
			if (time === 0) clearInterval(Countdown); // GameOver
		}, 1000);
	}



	function initGame() {
		startTimer();
		fetchWords();
	}

	// It clears the old words that where at words-zone and replace it by 30 new random words.
	function fetchWords() {
		$words && ($words.innerHTML = '');
		const NUMBER_OF_WORDS = words.length;
		for (let i = 0; i < 30; ++i) {
			let random = Math.floor(Math.random() * NUMBER_OF_WORDS);
			buildAndRenderWord(words[random]);
		}
	}

	// Given a words, split it by letters and render it in the DOM.
	function buildAndRenderWord(word: string): void {
		const letters = word.split('');
		$words!.innerHTML += `<word>
			${
				letters.map((letter) => `<letter>${letter}</letter>`).join('')
			}
		</word>`
	}

	// Control input focus (input is invisible).
	$game_zone?.addEventListener("click", () => {
		$input?.focus();
	});

	initGame(); // Let's play :D
</script>